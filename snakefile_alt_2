""" SCVUIU v2 ITS alternate metabarcode pipeline, part 2

This is the continuation of the first part of the alternate meteabarcode pipeline:
6_Create ESV table
7_ITS extraction
8_Taxonomic assignment

"""

#######################################################################
# Read in vars from config.yaml
# Generate new vars, dirs, and filenames
# All code not in rules (this section) is run first before any rules (next section onwards)

dir=config["dir"]

# Primer trimmed reads
gzip_out=dir+"/cat.fasta.gz"

# Denoised ESVs
usearch_out=dir+"/cat.denoised"

# 6_Create ESV table
vsearch_out2=dir+"/ESV.table"
vsearch_log2=dir+"/table.log"

# 7_ITS extraction
itsx_out_prefix=dir+"/ITSx_out"
itsx_out=dir+"/ITSx_out.ITS2.fasta"

# 8_Taxonomic assignment
rdp_out=dir+"/rdp.out.tmp"
rdp_out2=dir+"/rdp.out2.tmp"
rdp_csv=dir+"/rdp.csv.tmp"
rdp_csv2=dir+"/rdp.csv"

#######################################################################
# This rule defines the final target file that is needed from the pipeline
# Hashed lines (begin with # symbol) are not executed
# Target files need to be separated with a comma
# Snakemake looks at all input and output files to determine which rules need to be run to create the target file

rule all:
	input:
		# Rule testing [In order of execution]:
		# 6_Create ESV table
#		vsearch_out2
		# 7_ITS extraction
#		itsx_out
		# 8_Taxonomic assignment
#		rdp_out
		# 8_Reformat Zotu field to match ESV table
#		rdp_out2
		# 8_Taxonomic assignment (add read numbers)
#		rdp_csv
		# 8_Taxonomic assignment (edit ESV id's to include amplicon name) [Final output file]
		rdp_csv2
	 
#######################################################################
# Create ESV table

rule create_ESV_table:
	version: "2.13.16"
	input:
		usearch_global=gzip_out,
		db=usearch_out
	output:
		vsearch_out2
	threads: config["VSEARCH"]["t"]
	log: vsearch_log2
	shell:
		"vsearch --threads {threads} --usearch_global {input.usearch_global} --db {input.db} --id 1.0 --otutabout {output} --log {log}"

#######################################################################
# Generate ITS trimmed reads

rule ITS_extraction:
	version: "1.1b1"
	input:
		usearch_out
	params:
		prefix=itsx_out_prefix
	output:
		itsx_out
	shell:
		"ITSx -i {input} -o {params.prefix} --cpu {config[VSEARCH][t]}"

#######################################################################
# Taxonomic assignment

# Use the RDP classifier for taxonomic assignment
# Make sure this is installed locally (do not use the old 2.2 version available from conda), download the v2.12 from sourceforge, indicate the path to the classifeir in the config file
# Be sure to indicate the location of the trained reference database properties file in the config file

rule taxonomic_assignment:
	version: "2.12"
	input:
		itsx_out
	output:
		temp(rdp_out)
	shell:
		"java -Xmx8g -jar {config[RDP][jar]} classify -g {config[RDP][g]} -o {output} {input}"

#######################################################################
# Reformat Zotu field to match ESV table

rule reformat_zotu_field:
	input:
		rdp_out
	output:
		temp(rdp_out2)
	shell:
		"sed -e 's/|[a-zA-Z]|ITS2//g' {input} >> {output}"

#######################################################################
# Map read number

# Edit path in top line of Perl script to match path to perl in conda environment

rule map_read_number:
	input:
		table=vsearch_out2,
		rdp=rdp_out2
	output:
		temp(rdp_csv)
	shell:
		"perl perl_scripts/add_abundance_to_rdp_out5.plx {input.table} {input.rdp} > {output}"

#######################################################################
# Edit csv to add amplicon name to Zotu
# This is needed when data from different amplicons are combined, so that the Zotu's remain unique

rule edit_csv:
	input:
		rdp_csv
	output:
		rdp_csv2
	shell:
		"sed -e {config[SED]} {input} > {output}"


# End of alternate metabarcode pipeline, part 2
